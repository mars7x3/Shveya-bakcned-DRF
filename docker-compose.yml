version: '2.2'

services:
  postgres:
    image: postgres:latest
    env_file:
      - ./app/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    networks:
      - db_network

  web:
    build: ./
    command: gunicorn main_conf.wsgi:application --bind 0.0.0.0:8000
    restart: always
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    ports:
      - "8000:8000"
    env_file:
      - ./app/.env
    depends_on:
      - postgres
    networks:
      - app_network
      - db_network

  nginx:
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - app_network

  celery:
    build: ./
    command: celery -A main_conf worker --loglevel=info
    restart: always
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    env_file:
      - ./app/.env
    depends_on:
      - web
      - rabbitmq
    networks:
      - app_network
      - db_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    networks:
      - db_network

volumes:
  static_volume:
  media_volume:
  postgres_data:
    driver: local

networks:
  db_network:
  app_network:
